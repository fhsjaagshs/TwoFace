- (void)uploadPictureTwitter {
    
    int size = 2048;
    if ((imageFromCameraRoll.size.width > size) && (imageFromCameraRoll.size.height > size)) {
        float ratio = MIN(size/imageFromCameraRoll.size.width, size/imageFromCameraRoll.size.height);
        float width = ratio*imageFromCameraRoll.size.width;
        float height = ratio*imageFromCameraRoll.size.height;
        imageFromCameraRoll = [imageFromCameraRoll scaleToSize:CGSizeMake(width, height)];
    }
    
    NSString *status = replyZone.text;
    
    NSString *boundary = @"----------------------------991990ee82f7";
    
    NSURL *finalURL = [NSURL URLWithString:@"http://upload.twitter.com/1/statuses/update_with_media.json"];
        
    OAMutableURLRequest *theRequest = [[OAMutableURLRequest alloc] initWithURL:finalURL consumer:[[kAppDelegate _engine]consumer] token:[[kAppDelegate _engine]getAccessToken]  realm: nil signatureProvider:nil];
    
    [theRequest setHTTPMethod:@"POST"];
    [theRequest setHTTPShouldHandleCookies:NO];
    
    // Set headers for client information, for tracking purposes at Twitter.
    [theRequest setValue:[[kAppDelegate _engine]clientName]    forHTTPHeaderField:@"X-Twitter-Client"];
    [theRequest setValue:[[kAppDelegate _engine]clientVersion] forHTTPHeaderField:@"X-Twitter-Client-Version"];
    [theRequest setValue:[[kAppDelegate _engine]clientURL]      forHTTPHeaderField:@"X-Twitter-Client-URL"];
    
    
    NSString *contentType = [NSString stringWithFormat:@"multipart/form-data; boundary=%@", boundary];
    [theRequest setValue:contentType forHTTPHeaderField:@"content-type"];
    
    NSMutableData *body = [NSMutableData dataWithLength:0];
    [body appendData:[[NSString stringWithFormat:@"--%@\r\n", boundary] dataUsingEncoding:NSUTF8StringEncoding]];
    
    [body appendData:[@"Content-Disposition: form-data; name=\"media_data[]\"; filename=\"1.png\"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[@"Content-Type: application/octet-stream\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[@"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[[NSString stringWithString:[UIImagePNGRepresentation(imageFromCameraRoll) base64EncodingWithLineLength:0]] dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[[NSString stringWithFormat:@"\r\n--%@\r\n", boundary] dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[@"Content-Disposition: form-data; name=\"status\"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[@"\r\n" dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[status dataUsingEncoding:NSUTF8StringEncoding]];
    [body appendData:[[NSString stringWithFormat:@"--%@--\r\n", boundary] dataUsingEncoding:NSUTF8StringEncoding]];
    
    // --------------------------------------------------------------------------------
    // modificaiton from the base clase
    // our version "prepares" the oauth url request
    // --------------------------------------------------------------------------------
    [theRequest prepare];
    
    [theRequest setHTTPBody:body];
    
    NSError *error = nil;
    NSURLResponse *response = nil;
    
    NSData *responseData = [NSURLConnection sendSynchronousRequest:theRequest returningResponse:&response error:&error];
    id obj = [NSJSONSerialization JSONObjectWithData:responseData options:NSJSONReadingMutableContainers error:nil];
    NSLog(@"obj %@",obj);
    NSString *errorMessage = [obj objectForKey:@"error"];
    NSLog(@"error:%@",errorMessage);
}