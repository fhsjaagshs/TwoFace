
    
    /*- (void)fetchPostsForID:(NSString *)userIdentifier {
    AppDelegate *ad = kAppDelegate;
    [UIApplication sharedApplication].networkActivityIndicatorVisible = YES;
    NSString *graphString = [[NSString alloc]initWithFormat:@"%@/feed",userIdentifier];
    
    NSMutableDictionary *params = [[NSMutableDictionary alloc]init];
    [params setObject:@"U" forKey:@"date_format"];
    [params setObject:@"3" forKey:@"limit"];

    [ad.facebook requestWithGraphPath:graphString andParams:params andHttpMethod:@"GET" andDelegate:self];
}*/

    /*NSString *extractedIdentifier = [[[request.url stringByReplacingOccurrencesOfString:@"https://graph.facebook.com/" withString:@""]stringByReplacingOccurrencesOfString:@"/feed" withString:@""]stringByReplacingOccurrencesOfString:@"/" withString:@""];
    
    [fetchedUsernames addObject:extractedIdentifier];
    
    NSString *lastFour = [request.url substringFromIndex:request.url.length-4];
    BOOL isFetchPostsRequest = [lastFour isEqualToString:@"feed"];
    
    if (isFetchPostsRequest) {
        NSMutableArray *parsedPosts = [[NSMutableArray alloc]init];
        
        NSDictionary *postsDict = (NSDictionary *)result;
        NSMutableArray *data = [postsDict objectForKey:@"data"];
        
        for (int i = 0; i < data.count; i++) {
            
            NSMutableDictionary *restructured = [[NSMutableDictionary alloc]init];
            
            NSDictionary *post = [data objectAtIndex:i];

            NSString *toID = [[[[post objectForKey:@"to"]objectForKey:@"data"]firstObjectA]objectForKey:@"id"];
            NSString *toName = [[[[post objectForKey:@"to"]objectForKey:@"data"]firstObjectA]objectForKey:@"name"];
            NSString *objectID = [post objectForKey:@"object_id"];
            NSString *imageIcon = [post objectForKey:@"icon"];
            NSString *fromName = [[post objectForKey:@"from"]objectForKey:@"name"];
            NSString *fromID = [[post objectForKey:@"from"]objectForKey:@"id"];
            NSString *message = [[post objectForKey:@"message"]stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
            NSString *type = [post objectForKey:@"type"];
            NSString *imageURL = [post objectForKey:@"picture"];
            NSString *link = [post objectForKey:@"link"];
            NSString *linkName = [post objectForKey:@"name"];
            NSString *linkCaption = [post objectForKey:@"caption"];
            NSString *linkDescription = [post objectForKey:@"description"];
            NSString *actionsAvailable = ([(NSArray *)[post objectForKey:@"actions"]count] > 0)?@"yes":@"no";
            NSString *postID = [post objectForKey:@"id"];
            NSDate *created_time = [NSDate dateWithTimeIntervalSince1970:[[post objectForKey:@"updated_time"]floatValue]+1800];
            
            [restructured setValue:toID forKey:@"to_id"];
            [restructured setValue:toName forKey:@"to_name"];
            [restructured setValue:objectID forKey:@"object_id"];
            [restructured setValue:imageIcon forKey:@"icon"];
            [restructured setValue:postID forKey:@"id"];
            [restructured setValue:type forKey:@"type"];
            [restructured setValue:created_time forKey:@"poster_created_time"];
            [restructured setValue:fromName forKey:@"poster_name"];
            [restructured setValue:fromID forKey:@"poster_id"];
            [restructured setValue:message forKey:@"message"];
            [restructured setValue:imageURL forKey:@"image_url"];
            [restructured setValue:link forKey:@"link"];
            [restructured setValue:linkName forKey:@"link_name"];
            [restructured setValue:linkCaption forKey:@"link_caption"];
            [restructured setValue:linkDescription forKey:@"link_description"];
            [restructured setValue:actionsAvailable forKey:@"actions_available"];
            
            BOOL isLink = [type isEqualToString:@"link"];
            
            if (isLink) {
                message = [post objectForKey:@"story"];
            }
            
            [restructured setValue:@"facebook" forKey:@"social_network_name"];
            
            // Whether or not the status being parsed is one of those dumbass posts that says "Person X is friends with Person Y."
            BOOL isDumbStatusStory = (([(NSString *)[post objectForKey:@"story"] length] > 0) && [type isEqualToString:@"status"]);
            
            if (!isDumbStatusStory) {
                
                if (message.length == 0) {
                    message = [post objectForKey:@"story"];
                    
                    if (message.length > 0) {
                        [restructured setObject:message forKey:@"message"];
                    }
                }
                
                if (message.length == 0) {
                    message = [post objectForKey:@"description"];
                    
                    if (message.length > 0) {
                        [restructured setObject:message forKey:@"message"];
                    }
                }
                
                BOOL shouldAddPost = YES;
                
                if (message.length == 0) {
                    
                    if ([type isEqualToString:@"link"]) {
                        if ((link == nil) || (link.length == 0)) {
                            shouldAddPost = NO;
                        }
                    }
                    
                    if ([type isEqualToString:@"photo"]) {
                        if (((objectID == nil) || (objectID.length == 0))) {
                            shouldAddPost = NO;
                        }
                    }
                    
                    if ([type isEqualToString:@"status"]) {
                        shouldAddPost = NO;
                    }
                }
            
                if (shouldAddPost) {
                    [parsedPosts addObject:restructured];
                }
            }
        }
        [timeline addObjectsFromArray:parsedPosts];
    }
    
    [self reflectCompletedFetchingIfDoneFetching];*/